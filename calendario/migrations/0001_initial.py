# Generated by Django 5.2.5 on 2025-08-13 14:36

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('academico', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='EventoCalendario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=200, verbose_name='Título')),
                ('descricao', models.TextField(blank=True, verbose_name='Descrição')),
                ('data_inicio', models.DateTimeField(verbose_name='Data e Hora de Início')),
                ('data_fim', models.DateTimeField(verbose_name='Data e Hora de Término')),
                ('tipo_evento', models.CharField(choices=[('prova', 'Prova/Exame'), ('aula', 'Aula'), ('trabalho', 'Trabalho/Projeto'), ('estudo', 'Sessão de Estudo'), ('reuniao', 'Reunião'), ('outro', 'Outro')], default='outro', max_length=20, verbose_name='Tipo de Evento')),
                ('cor_personalizada', models.CharField(blank=True, help_text='Cor em formato hexadecimal (ex: #FF7A00)', max_length=7, verbose_name='Cor Personalizada')),
                ('lembrete', models.BooleanField(default=True, verbose_name='Ativar Lembrete')),
                ('tempo_lembrete', models.IntegerField(default=30, help_text='Quantos minutos antes do evento enviar o lembrete', verbose_name='Tempo do Lembrete (minutos)')),
                ('criado_em', models.DateTimeField(auto_now_add=True)),
                ('atualizado_em', models.DateTimeField(auto_now=True)),
                ('materia', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='eventos_calendario', to='academico.materia', verbose_name='Matéria')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='eventos_calendario', to=settings.AUTH_USER_MODEL, verbose_name='Usuário')),
            ],
            options={
                'verbose_name': 'Evento do Calendário',
                'verbose_name_plural': 'Eventos do Calendário',
                'ordering': ['data_inicio'],
            },
        ),
        migrations.CreateModel(
            name='RecorrenciaEvento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo_recorrencia', models.CharField(choices=[('diaria', 'Diária'), ('semanal', 'Semanal'), ('quinzenal', 'Quinzenal'), ('mensal', 'Mensal'), ('anual', 'Anual')], max_length=20, verbose_name='Tipo de Recorrência')),
                ('data_fim_recorrencia', models.DateField(blank=True, help_text='Deixe em branco para recorrência infinita', null=True, verbose_name='Data Final da Recorrência')),
                ('intervalo', models.PositiveIntegerField(default=1, help_text='A cada quantos períodos repetir (ex: a cada 2 semanas)', verbose_name='Intervalo')),
                ('dias_semana', models.CharField(blank=True, help_text='Para recorrência semanal: 1=Segunda, 2=Terça... (separados por vírgula)', max_length=20, verbose_name='Dias da Semana')),
                ('evento', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='recorrencia', to='calendario.eventocalendario', verbose_name='Evento')),
            ],
            options={
                'verbose_name': 'Recorrência de Evento',
                'verbose_name_plural': 'Recorrências de Eventos',
            },
        ),
        migrations.AddIndex(
            model_name='eventocalendario',
            index=models.Index(fields=['data_inicio'], name='calendario__data_in_0041fc_idx'),
        ),
        migrations.AddIndex(
            model_name='eventocalendario',
            index=models.Index(fields=['usuario', 'data_inicio'], name='calendario__usuario_8405bc_idx'),
        ),
        migrations.AddIndex(
            model_name='eventocalendario',
            index=models.Index(fields=['tipo_evento'], name='calendario__tipo_ev_1d0e88_idx'),
        ),
    ]
